apiVersion: apps/v1
kind: Deployment
metadata:
  name: manager
  labels:
    app: manager
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: manager
  template:
    metadata:
      labels:
        app: manager
    spec:
      serviceAccountName: manager-sa
      containers:
      - name: manager
        image: as9697/manager
        imagePullPolicy: Always
      terminationGracePeriodSeconds: 0
      nodeSelector:
        kubernetes.io/hostname: node1
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: manager
##  labels:
##    name: manager
#spec:
#  type: NodePort
#  ports:
#    - port: 5000
#      nodePort: 30036
#  selector:
#    app: manager
---
apiVersion: v1
kind: Service
metadata:
  name: manager-svc
spec:
  selector:
    app: manager
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
# Define service so that you will set Rules to it for
# accessing k8 API
apiVersion: v1
kind: ServiceAccount
metadata:
  name: manager-sa
---
# Define the roles for service account
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: manager-sa
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
# Bind the role to the service account
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: manager-sa
subjects:
- kind: ServiceAccount
  name: manager-sa
roleRef:
  kind: ClusterRole
  name: manager-sa
  apiGroup: rbac.authorization.k8s.io
